// src/App.jsx
import React, { useState } from "react";
import useIndexedDB from "./hooks/useIndexedDB";
import useSkinsDB from "./hooks/useSkinsDB";

// –í–∞—à–∏ —Ç—Ä–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
import Upgrades from "./features/upgrades/upgrades";
import CasesMenuWithReels from "./features/cases/CasesMenuWithReels";
import Skins from "./features/skins/Skins";



import styles from "./styles/App.module.scss";

export default function App() {
  // === 1. –°–æ—Å—Ç–æ—è–Ω–∏—è, —Ö—Ä–∞–Ω—è—â–∏–µ –¥–∞–Ω–Ω—ã–µ –∏–≥—Ä—ã:
  const [credits, setCredits]           = useIndexedDB("credits", 0);
  const [clickValue, setClickValue]     = useIndexedDB("clickValue", 1);
  const [upgradeLevel, setUpgradeLevel] = useIndexedDB("upgradeLevel", 0);
  const [selectedSkin, setSelectedSkin] = useSkinsDB("selectedSkin", "default");

  // === 2. –õ–æ–∫–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ ¬´–∫–∞–∫–∞—è –≤–∫–ª–∞–¥–∫–∞ –∞–∫—Ç–∏–≤–Ω–∞¬ª
  //    –î–æ–ø—É—Å—Ç–∏–º—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è: "upgrades", "skins", "cases", "leaders"
  const [activeTab, setActiveTab] = useState("upgrades");

  // === 3. –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–Ω–æ–ø–∫–µ –∫–ª–∏–∫–∞:
  const handleClick = () => {
    setCredits((c) => c + clickValue);
  };

  return (
    // –ö–æ—Ä–Ω–µ–≤–æ–π div ‚Äî —Ç–µ–ø–µ—Ä—å full-width, 
    // –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —Å–∫–∏–Ω–∞ –¥–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å skin_default, skin_neon –∏ —Ç.–ø.
    <div className={`${styles.container} ${styles[`skin_${selectedSkin}`]}`}>
      {/* -------------------------------------- */}
      {/*  A. –®–∞–ø–∫–∞ (Title + –æ—Å–Ω–æ–≤–Ω–æ–π click-–±–ª–æ–∫) */}
      {/* -------------------------------------- */}
      <h1 className={styles.title}>üñ± Clicker Game</h1>
      <h2 className={styles.counter}>Credits: {credits}</h2>
      <button className={styles.button} onClick={handleClick}>
        Click me! (+{clickValue})
      </button>

      {/* -------------------------------------- */}
      {/*  B. –ù–∞–≤–∏–≥–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–∞–±—ã (UPGRADES / SKINS / CASES / LEADERS) */}
      {/* -------------------------------------- */}
      <div className={styles.navbar}>
        {/* –ö–∞–∂–¥–∞—è –∫–Ω–æ–ø–∫–∞ –ø—Ä–æ—Å—Ç–æ –º–µ–Ω—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ activeTab */}
        <button
          className={`${styles.navButton} ${activeTab === "upgrades" ? styles.active : ""}`}
          onClick={() => setActiveTab("upgrades")}
        >
          UPGRADES
        </button>
        <button
          className={`${styles.navButton} ${activeTab === "skins" ? styles.active : ""}`}
          onClick={() => setActiveTab("skins")}
        >
          SKINS
        </button>
        <button
          className={`${styles.navButton} ${activeTab === "cases" ? styles.active : ""}`}
          onClick={() => setActiveTab("cases")}
        >
          CASES
        </button>

      </div>

      {/* -------------------------------------- */}
      {/*  C. –£—Å–ª–æ–≤–Ω—ã–π —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –≤–∫–ª–∞–¥–æ–∫ */}
      {/* -------------------------------------- */}
      {activeTab === "upgrades" && (
        <div className={styles.upgradesSection}>
          <Upgrades
            credits={credits}
            setCredits={setCredits}
            clickValue={clickValue}
            setClickValue={setClickValue}
            level={upgradeLevel}
            setLevel={setUpgradeLevel}
          />
        </div>
      )}

      {activeTab === "skins" && (
        <div className={styles.skinsSection}>
          <Skins
            credits={credits}
            setCredits={setCredits}
            selectedSkin={selectedSkin}
            setSelectedSkin={setSelectedSkin}
          />
        </div>
      )}

      {activeTab === "cases" && (
        <div className={styles.casesSection}>
          <CasesMenuWithReels credits={credits} setCredits={setCredits} />
        </div>
      )}


    </div>
  );
}
