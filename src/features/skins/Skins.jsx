// src/features/skins/Skins.jsx
import React, { useEffect, useState } from "react";
import useSkinsDB from "../../hooks/useSkinsDB";
import { SKINS } from "./skinsConfig";
import styles from "../../styles/App.module.scss";

export default function Skins({
  credits,
  setCredits,
  selectedSkin,      // –ø—Ä–∏—Ö–æ–¥–∏—Ç –∏–∑ App.jsx
  setSelectedSkin,   // –ø—Ä–∏—Ö–æ–¥–∏—Ç –∏–∑ App.jsx
}) {
  // –°–ø–∏—Å–æ–∫ –∫—É–ø–ª–µ–Ω–Ω—ã—Ö —Å–∫–∏–Ω–æ–≤ (–º—ã –ø–æ-–ø—Ä–µ–∂–Ω–µ–º—É —Ö—Ä–∞–Ω–∏–º –µ–≥–æ –≤ IndexedDB)
  const [unlockedSkins, setUnlockedSkins] = useSkinsDB("unlockedSkins", ["default"]);
  const [message, setMessage]             = useState("");

  // –ü—Ä–∏ –ø–µ—Ä–≤–æ–º —Ä–µ–Ω–¥–µ—Ä–µ, –µ—Å–ª–∏ –≤–¥—Ä—É–≥ unlockedSkins –ø—É—Å—Ç, –¥–æ–±–∞–≤–ª—è–µ–º "default"
  useEffect(() => {
    if (!unlockedSkins || unlockedSkins.length === 0) {
      setUnlockedSkins(["default"]);
      setSelectedSkin("default");
    }
  }, [unlockedSkins, setUnlockedSkins, setSelectedSkin]);

  const buySkin = skinKey => {
    const skin = SKINS.find(s => s.key === skinKey);
    if (!skin) return;
    const isUnlocked = unlockedSkins.includes(skinKey);

    if (isUnlocked) {
      // –£–∂–µ –∫—É–ø–ª–µ–Ω ‚Üí –ø—Ä–æ—Å—Ç–æ ¬´–Ω–∞–¥–µ—Ç—å¬ª
      setSelectedSkin(skinKey);
      setMessage(`–°–∫–∏–Ω "${skin.name}" –ø—Ä–∏–º–µ–Ω—ë–Ω.`);
      return;
    }

    if (credits < skin.cost) {
      setMessage(`–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç ${skin.cost - credits} –∫—Ä–µ–¥–∏—Ç–æ–≤ –¥–ª—è "${skin.name}".`);
      return;
    }

    // –ü–æ–∫—É–ø–∫–∞ –≤–ø–µ—Ä–≤—ã–µ
    setCredits(c => c - skin.cost);
    setUnlockedSkins(prev => [...prev, skinKey]);
    setSelectedSkin(skinKey);
    setMessage(`–í—ã –∫—É–ø–∏–ª–∏ –∏ –ø—Ä–∏–º–µ–Ω–∏–ª–∏ —Å–∫–∏–Ω "${skin.name}".`);
  };

  return (
    <div className={styles.skinsSection}>
      <h3>üé® Skins</h3>

      {SKINS.map(skin => {
        const isUnlocked = unlockedSkins.includes(skin.key);
        const isSelected = selectedSkin === skin.key; // –°–†–ê–í–ù–ò–í–ê–ï–ú —Å –ø—Ä–∏—à–µ–¥—à–∏–º –ø—Ä–æ–ø—Å–æ–º

        return (
          <div key={skin.key} className={styles.skinItem}>
            <div className={styles.skinInfo}>
              <strong>{skin.name}</strong>
              {skin.cost > 0 && (
                <span className={styles.skinCost}>(Cost: {skin.cost})</span>
              )}
            </div>
            <button
              className={styles.button}
              onClick={() => buySkin(skin.key)}
              disabled={!isUnlocked && credits < skin.cost}
            >
              {isUnlocked
                ? isSelected
                  ? "Equipped"
                  : "Equip"
                : `Buy`}
            </button>
          </div>
        );
      })}

      {message && <p className={styles.message}>{message}</p>}
    </div>
  );
}
